package io.mars.maintenance.domain

create DtDefinition DtTicket {
	id ticketId {domain: DoId label:"Id"}
	field code {domain: DoLabel label: "Number" cardinality:"1"}
	field title {domain: DoLabel label: "Title" cardinality:"1"}
	field description {domain: DoDescription label: "Description" }
	field dateCreated {domain: DoLocaldate label: "Creation Date" }
	field dateClosed {domain: DoLocaldate label: "Closing Date" }
	sortField : "code"
	displayField : "title"
}

create DtDefinition DtWorkOrder {
	id woId {domain: DoId label:"Id"}
	field code {domain: DoLabel label: "Code" cardinality:"1"}
	field ticketCode {domain: DoLabel label: "Number"}
	field name {domain: DoLabel label: "Name" cardinality:"1"}
	field description {domain: DoDescription label: "Description" }
	field dateCreated {domain: DoLocaldate label: "Creation Date" }
	field dateClosed {domain: DoLocaldate label: "Closing Date" }
	field dueDate {domain: DoLocaldate label: "Due Date" }	
}

create DtDefinition DtWorkOrderStatus {
	stereotype: "StaticMasterData"
	id workOrderStatusId {domain: DoCode label:"Id"}
	field label {domain: DoLabel label:"Status Label" }
	values : ` { 	"done" : 		{ "workOrderStatusId" : "DONE", 		"label" : "Done" 		},
        			"inProgress" : 	{ "workOrderStatusId" : "INPROGRESS",  	"label" : "In Progress" },
        			"failed" : 		{ "workOrderStatusId" : "FAILED", 		"label" : "Failed"		},
        			"pending" : 	{ "workOrderStatusId" : "PENDING", 		"label" : "Pending" 	}}`
}

create DtDefinition DtTicketStatus {
	stereotype: "StaticMasterData"
	id ticketStatusId {domain: DoCode label:"Id"}
	field label {domain: DoLabel label:"Status Label" }
	values : `{ 	"open" : 		{ "ticketStatusId" : "OPEN", 			"label" : "Open"  		},
        			"assigned" : 	{ "ticketStatusId" : "ASSIGNED", 		"label" : "Assigned" 	},
        			"closed" : 		{ "ticketStatusId" : "CLOSED", 			"label" : "Closed" 		}}`
}



create Association ATicketWorkOrder {
	fkFieldName : "ticketId"
    
 	dtDefinitionA : DtWorkOrder
 	type : "*>?"
	dtDefinitionB : DtTicket
			
	labelB : "Ticket"
}

create Association ATicketTicketStatus {
	fkFieldName : "ticketStatusId"
    
 	dtDefinitionA : DtTicket
 	type : "*>?"
	dtDefinitionB : DtTicketStatus
			
	labelB : "Ticket Status"
}


create Association AWorkOrderWorkOrderStatus {
	fkFieldName : "workOrderStatusId"
    
 	dtDefinitionA : DtWorkOrder
 	type : "*>?"
	dtDefinitionB : DtWorkOrderStatus
			
	labelB : "Work Order Status"
}

create Association AEquipmentTicket {
	fkFieldName : "equipmentId"
    
 	dtDefinitionA : DtTicket
 	type : "*>?"
	dtDefinitionB : DtEquipment
			
	labelB : "Equipment"
}

