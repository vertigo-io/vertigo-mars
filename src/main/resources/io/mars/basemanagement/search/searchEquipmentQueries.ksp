package io.mars.basemanagement.search

create IndexDefinition IdxEquipment {  
  keyConcept : DtEquipment
  dtIndex : DtEquipmentIndex 
  indexCopyTo allText { from: "name,code,description,tags,equipmentTypeName,equipmentCategoryName,baseName" }
  loaderId : "EquipmentSearchLoader"
} 

create FacetDefinition FctEquipmentEquipmentTypeName {
	dtDefinition:DtEquipmentIndex, fieldName:"equipmentTypeName", label:"Equipment Type",
	multiselectable: "true"
}

create FacetDefinition FctEquipmentEquipmentTags {
    dtDefinition:DtEquipmentIndex, fieldName:"tags", label:"Equipment Tags"
    multiselectable: "true"
} 

create FacetDefinition FctEquipmentEquipmentCategoryName {
	dtDefinition:DtEquipmentIndex, fieldName:"equipmentCategoryName", label:"Equipment Category"
} 

create FacetDefinition FctEquipmentPurchaseDate {
	dtDefinition:DtEquipmentIndex, fieldName:"purchaseDate", label:"Purchase Date"
	range r1 { filter:"purchaseDate:[01/01/2008 TO 01/01/2012]", label:"2008-2012"},
	range r2 { filter:"purchaseDate:[01/01/2012 TO 01/01/2016]", label:"2012-2016"},
	range r3 { filter:"purchaseDate:[01/01/2016 TO *]", label:"after 2016"}
}

create FacetDefinition FctEquipmentGeoDistance { 
	dtDefinition:DtEquipmentIndex, fieldName:"geoLocation", label:"Location"
	range r1 { filter:"geoLocation:#geoLocation#~5km", label:"< 5km"}, /* #geoLocation# ref a field of criteria not index */
	range r2 { filter:"geoLocation:#geoLocation#~10km", label:"< 10km"},
	range r3 { filter:"geoLocation:#geoLocation#~20km", label:"< 20km"},
	range r4 { filter:"geoLocation:#geoLocation#~50km", label:"< 50km"},
	range r5 { filter:"geoLocation:#geoLocation#~100km", label:"< 100km"},
	range r6 { filter:"geoLocation:#geoLocation#~200km", label:"< 200km"},
	range r7 { filter:"geoLocation:#geoLocation#~500km", label:"< 500km"},
	range r8 { filter:"geoLocation:[#geoLocation#~500km to #geoLocation#~0km]", label:"> 500km"}	
}

create FacetDefinition FctEquipmentGeoHash {
	dtDefinition:DtEquipmentIndex, fieldName:"geoLocation", label:"Location"
	params geohash_grid { value : "{\"field\" : \"geoLocation\", \"precision\" : #geoPrecision#}" }
	params _innerWriteTo { value : "writeVInt(#geoPrecision#);writeVInt(1000);writeVInt(-1)" }
}

create FacetedQueryDefinition QryEquipment {
	dtIndex : DtEquipmentIndex
	facets : [FctEquipmentEquipmentTypeName, FctEquipmentPurchaseDate, FctEquipmentEquipmentCategoryName, FctEquipmentEquipmentTags ]
	domainCriteria : DoLabel
	listFilterBuilderClass : "io.vertigo.datafactory.impl.search.dsl.DslListFilterBuilder"  
	listFilterBuilderQuery : "allText:#+query*#"
}


create FacetedQueryDefinition QryEquipmentGeo {
	dtIndex : DtEquipmentIndex
	facets : [FctEquipmentEquipmentTypeName, FctEquipmentPurchaseDate, FctEquipmentEquipmentCategoryName, FctEquipmentGeoHash]
	domainCriteria : DoDtGeoSearchEquipmentCriteria
	listFilterBuilderClass : "io.vertigo.datafactory.impl.search.dsl.DslListFilterBuilder"  
	listFilterBuilderQuery : "allText:#+criteria*#"
	geoSearchQuery : "geoLocation: [#geoUpperLeft# to #geoLowerRight#]"
}

create FacetedQueryDefinition QryEquipmentGeoDistance {
	dtIndex : DtEquipmentIndex
	facets : [FctEquipmentEquipmentTypeName, FctEquipmentPurchaseDate, FctEquipmentEquipmentCategoryName, FctEquipmentGeoDistance, FctEquipmentGeoHash]
	domainCriteria : DoDtGeoSearchEquipmentCriteria
	listFilterBuilderClass : "io.vertigo.datafactory.impl.search.dsl.DslListFilterBuilder"  
	listFilterBuilderQuery : "allText:#+criteria*#"
	geoSearchQuery : "geoLocation: [#geoUpperLeft# to #geoLowerRight#]"
}

