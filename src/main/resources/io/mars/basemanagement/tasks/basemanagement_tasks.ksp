package io.mars.basemanagement

create Task TkGetLastPurchasedEquipmentsByBaseId {  
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
            select 
            	equ.*
			from (<%=securedEquipment.asSqlFrom(\"equipment\", ctx)%>) equ
			where equ.base_id = #baseId#
			order by equ.purchase_date desc
			limit 50
             "
    in 	baseId           {domain : DoId         	cardinality: "1"}
    in  securedEquipment {domain : DoAuthorizationCriteria    cardinality: "1"}
    out equipments       {domain : DoDtEquipment	cardinality: "*"}
}

create Task TkGetEquipmentsByBaseCode {  
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
            select 
            	equ.*
			from equipment equ
				join base bas on bas.base_id = equ.base_id
			where bas.code = #code# and <%=securedEquipment.asSqlWhere(\"equ\", ctx)%>
             "
    in 	code     	 {domain : DoCode         cardinality: "1" }
    in  securedEquipment {domain : DoAuthorizationCriteria    cardinality: "1"}
    out	equipments   {domain : DoDtEquipment  cardinality: "*" } 
}



create Task TkInsertEquipmentsBatch {
    className : "io.vertigo.basics.task.TaskEngineProcBatch"
        request : "
        	INSERT INTO EQUIPMENT (EQUIPMENT_ID, 
        							NAME, 
        							CODE, 
        							HEALTH_LEVEL, 
        							PURCHASE_DATE, 
        							DESCRIPTION, 
        							TAGS, 
        							GEO_LOCATION, 
        							RENTING_FEE, 
        							EQUIPMENT_VALUE, 
        							BASE_ID, 
        							GEOSECTOR_ID, 
        							BUSINESS_ID, 
        							EQUIPMENT_TYPE_ID) values (nextval('SEQ_EQUIPMENT'),
        														#equipmentsList.name#,
        														#equipmentsList.code#,
        														#equipmentsList.healthLevel#,
        														#equipmentsList.purchaseDate#,
        														#equipmentsList.description#,
        														#equipmentsList.tags#,
        														#equipmentsList.geoLocation#,
        														#equipmentsList.rentingFee#,
        														#equipmentsList.equipmentValue#,
        														#equipmentsList.baseId#,
        														#equipmentsList.geosectorId#,
        														#equipmentsList.businessId#,
        														#equipmentsList.equipmentTypeId#)
			"
	in equipmentsList	{domain : DoDtEquipment	  cardinality: "*" }
} 

create Task TkLoadEquipmentsByChunk {
    className : "io.vertigo.basics.task.TaskEngineSelect"
        request : "
        	select * from EQUIPMENT 
			where EQUIPMENT_ID > #offset#
			and PURCHASE_DATE <= #dateExist#
        	order by EQUIPMENT_ID asc
			limit #limit#
			"
	in 	limit	 		{domain : DoId			cardinality: "1" }
	in 	offset	 		{domain : DoId			cardinality: "1" }
	in 	dateExist 		{domain : DoInstant 	cardinality: "1" }
	out	equipmentList	{domain : DoDtEquipment	cardinality: "*" }
}


create Task TkGetEquipmentCategoryFromEquipmentId {  
    className : "io.vertigo.basics.task.TaskEngineSelect"
    request : "
            select 
            	eca.*
			from equipment equ
				join equipment_type ety on ety.equipment_type_id = equ.equipment_type_id
				join equipment_category eca on eca.equipment_category_id = ety.equipment_category_id
			where equ.equipment_id = #equipmentId#
				and <%=securedEquipment.asSqlWhere(\"equ\", ctx)%>
             "
    in 	equipmentId  		{domain : DoId  					cardinality: "1" }
    in  securedEquipment 	{domain : DoAuthorizationCriteria   cardinality: "1" }
    out	equipmentCategory 	{domain : DoDtEquipmentCategory  	cardinality: "1" } 
}
