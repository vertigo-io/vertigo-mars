package io.mars.hr.domain


create DtDefinition DtPerson {
	id personId {domain: DoId label:"Id"}
	field firstName {domain: DoLabel label: "First Name" }
	field lastName {domain: DoLabel label: "Last Name" }
	field email {domain: DoEmail label:"E-mail" }
	field picturefileId {domain: DoId label:"Picture" }
	field picturefileIdTmp {domain: DoLabel label:"Picture"  persistent:"false"}
	field tags {domain: DoMultipleIds label: "Tags" }
	field dateHired {domain: DoLocaldate label: "Date hired" }
	computed fullName {domain : DoLabel, label:"Full name" 
        expression:"return getFirstName() + \" \" + getLastName();"
    }
}

create DtDefinition DtGroups {
	id groupId {domain: DoId label:"Id"}
	field name {domain: DoLabel label: "Name" }
}

create DtDefinition DtMission {
	id missionId {domain: DoId label:"Id"}
}

create Association AMissionRole {
    fkFieldName : "roleId"    
    dtDefinitionA : DtMission
    type : "*>1"
    dtDefinitionB : DtRole    
    labelB : "Role"
}

create DtDefinition DtRole {
    stereotype : "StaticMasterData"
    id roleId {domain: DoCode label:"Id"}
    field label {domain: DoLabel label:"Role Label" }  
    values : `{ "admin" :       { "roleId" : "ADMIN", "label" : "Base Administrator"},
                "manager" :     { "roleId" : "MANAG", "label" : "Base Manager" },
                "engineer" :    { "roleId" : "ENGIN", "label" : "Base Engineer"},
                "trainee" :     { "roleId" : "WORKE", "label" : "Base Worker"}  }`
}

create DtDefinition DtMissionDisplay {
	field missionId {domain: DoId label:"Id" }
	field role {domain: DoLabel label:"Role" }
	field baseId {domain: DoId label:"BaseId" }
	field baseName {domain: DoLabel label:"Base" }
	field businessName {domain: DoLabel label:"Business" }
}

create DtDefinition DtPersonInput {
	field groups {domain: DoId label:"Groups" cardinality : "*"}
}


/* Associations */

create Association APersonMission {
	fkFieldName : "personId"
    
 	dtDefinitionA : DtMission
 	type : "*>?"
	dtDefinitionB : DtPerson
			
	labelB : "Person"
}

create Association APersonGroups {
	fkFieldName : "groupId"
    
 	dtDefinitionA : DtPerson
 	type : "*>?"
	dtDefinitionB : DtGroups
	
	labelB : "Group"
}