---
boot:
  params:
    locales: fr_FR, en_US
  plugins:
    - io.vertigo.core.plugins.resource.classpath.ClassPathResourceResolverPlugin: {}
    - io.vertigo.core.plugins.resource.local.LocalResourceResolverPlugin: {}
    - io.vertigo.core.plugins.resource.url.URLResourceResolverPlugin: {}
    - io.vertigo.core.plugins.param.properties.PropertiesParamPlugin:
        __flags__: ["ethereum"]
        url: "${boot.walletParamsUrl}"
    - io.vertigo.core.plugins.param.properties.PropertiesParamPlugin:
        __flags__: ["klee"]
        url: "${boot.apiKeysUrl}"
    - io.vertigo.core.plugins.param.properties.PropertiesParamPlugin:
        __flags__: ["home"]
        url: ${user.home}\mars\marsconf\marsApiKeys.properties
    - io.vertigo.vega.plugins.webservice.servlet.WebAppContextParamPlugin: {}
    - io.vertigo.core.plugins.analytics.log.SocketLoggerAnalyticsConnectorPlugin:
        __flags__: ["klee"]
        appName: mars-analytics
        hostName: ${boot.analyticsHost}
modules:
  io.vertigo.connectors.redis.RedisFeatures:
    __flags__: ["klee"]
    features:
      - jedis:
          host: ${redisHost}
          port: 6379
          database: 0
          ssl: false
  io.vertigo.connectors.influxdb.InfluxDbFeatures:
    __flags__: ["klee"]
    features:
      - influxdb:
          host: ${influxdbHost}
          token: ${influxdbToken}
          org: vertigo
  io.vertigo.connectors.elasticsearch.ElasticSearchFeatures:
    features:
      - embeddedServer:
          __flags__: ["home"]
          home: search/
      - restHL:
          __flags__: ["home"]
          servers.names: "localhost:9200"
      - restHL:
          __flags__: ["klee"]
          servers.names: ${esHost}
  io.vertigo.connectors.mqtt.MqttFeatures:
    __flags__: ["klee"]
    features:
      - mosquitto:
          name: Subscriber
          host: ${mosquittoHost}
      - mosquitto:
          name: Publisher
          host: ${mosquittoHost}
  io.vertigo.connectors.keycloak.KeycloakFeatures:
    __flags__: ["keycloak"]
    features:
      - deployment:
          configUrl: ${keycloakConfigUrl}
  io.vertigo.connectors.javalin.JavalinFeatures:
    features:
      - standalone:
  io.vertigo.commons.CommonsFeatures:
    features:
      - script:
      - command:
    featuresConfig:
      - script.janino:
  io.vertigo.database.DatabaseFeatures:
    features:
      - sql:
      - timeseries:
      - migration:
          mode: update
    featuresConfig:
      - timeseries.influxdb: 
          __flags__: ["klee"]
          dbNames: mars-test;*
      - timeseries.fake:
          __flags__: ["home"]
      - sql.datasource:
          __flags__: ["klee"]
          classname: io.vertigo.database.impl.sql.vendor.postgresql.PostgreSqlDataBase
          source: java:/comp/env/jdbc/DataSource
      - sql.datasource:
          __flags__: ["home"]
          classname: io.vertigo.database.impl.sql.vendor.h2.H2DataBase
          source: java:/comp/env/jdbc/DataSourceHome
      - migration.liquibase:
          masterFile: /liquibase/master.xml
  io.vertigo.datamodel.DataModelFeatures:
  io.vertigo.datastore.DataStoreFeatures:
    features:
      - entitystore:
      - filestore:
      - kvStore:
      - cache:
    featuresConfig:
      - entitystore.sql:
      - entitystore.sql:
          dataSpace: orchestra
      - filestore.db:
          __flags__: ["klee"]
          storeDtName: DtMediaFileInfo
          fileInfoClass: io.mars.support.fileinfo.FileInfoStd 
      - filestore.filesystem:
          __flags__: ["home"]
          storeDtName: DtMediaFileInfo
          path: ${user.home}/marsFiles/
          fileInfoClass: io.mars.support.fileinfo.FileInfoStd
      - filestore.fullFilesystem:
          name: temp
          path: ${java.io.tmpdir}/marsFiles/
          purgeDelayMinutes: 30
          fileInfoClass: io.mars.support.fileinfo.FileInfoTmp
      - kvStore.delayedMemory:
          collections: protected-value
          timeToLiveSeconds: 3600
      - kvStore.delayedMemory:
          collections: uiFileInfos
          timeToLiveSeconds: 300
      - kvStore.berkeley:
          collections: VViewContext;TTL=43200
          dbFilePath: ${java.io.tmpdir}/vertigo-ui/MarsVViewContext
      - cache.memory:
  io.vertigo.datafactory.DataFactoryFeatures:
    features:
      - search:
    featuresConfig:
      - collections.luceneIndex:
      - search.elasticsearch.restHL:
          envIndexPrefix: mars
          rowsPerQuery: 50
          config.file: search/elasticsearch.yml
  io.vertigo.account.AccountFeatures:
    features:
      - security:
          userSessionClassName: io.mars.support.MarsUserSession
      - account:
      - authentication:
      - authorization:
    featuresConfig:
      - account.store.store:
          userIdentityEntity: DtPerson
          groupIdentityEntity: DtGroups
          userAuthField: email
          photoFileInfo: FiFileInfoStd
          userToAccountMapping: 'id:personId, displayName:lastName, email:email, authToken:email, photo: picturefileId'
          groupToGroupAccountMapping: 'id:groupId, displayName:name'
      - authentication.store:
          __flags__: ["keycloak"]
          userCredentialEntity: DtPerson
          userLoginField: email
          userPasswordField: notused
          userTokenIdField: email
      - authentication.text:
          __flags__: ["!keycloak"]
          filePath: /io/mars/support/userAccounts.txt
  io.vertigo.vega.VegaFeatures:
    features:
        - webservices:
        - authentication:
            appLoginHandler: loginServices
            defaultRedirectUrl: /home/
    featuresConfig:
        - webservices.javalin:
            apiPrefix: /api
        - webservices.token:
            tokens: mars-api
        - webservices.rateLimiting:
        - webservices.security:
        - webservices.swagger:
        - authentication.keycloak:
             __flags__: ["keycloak"]
        - authentication.local:
             __flags__: ["!keycloak"]
             loginUrl: /login/
  io.vertigo.orchestra.OrchestraFeatures:
    featuresConfig:
      - orchestra.database:
          nodeName: MARS1
          daemonPeriodSeconds: 30
          workersCount: 10
          forecastDurationSeconds: 60
      - orchestra.webapi:
  io.vertigo.social.SocialFeatures:
    features:
      - notifications:
      - comments:
      - handles:
      - webapi:
    featuresConfig:
      - notifications.redis:
          __flags__: ["klee"]
      - notifications.memory:
          __flags__: ["home"]
      - comments.redis:
          __flags__: ["klee"]
      - comments.memory:
          __flags__: ["home"]
      - handles.redis:
          __flags__: ["klee"]
      - handles.memory:
          __flags__: ["home"]
  io.vertigo.geo.GeoFeatures:
    features:
      - geosearch:
    featuresConfig:
      - geosearch.es:
          envIndexPrefix: mars
  io.vertigo.dashboard.DashboardFeatures:
    features:
      - analytics:
          appName: mars-analytics
  io.vertigo.audit.AuditFeatures:
    features:
      - ledger:
    featuresConfig:
      - ledger.ethereum:
          __flags__: ["ethereum"]
          urlRpcEthNode: ${ledgerHost}
          myAccountName: ${myAccountName}
          myPublicAddr: ${myPublicAddr}
          defaultDestAccountName: ${myAccountName}
          defaultDestPublicAddr: ${myPublicAddr}
          walletPassword: ${walletPassword}
          walletPath: ${walletPath}
      - ledger.fake:
          __flags__: ["!ethereum"]
  io.vertigo.connectors.ifttt.IftttFeatures:
    features:
      - ifttt:
          baseUrl: ${iftttApiUrl}
          apiKey: ${iftttApiKey}    
  io.mars.support.SupportFeatures:
  io.mars.catalog.CatalogFeatures:
  io.mars.hr.HrFeatures:
    features:
      - auth:
  io.mars.basemanagement.BasemanagementFeatures:
    features:
      - auth:
      - mqtt:
          __flags__: ["klee"]
  io.mars.maintenance.MaintenanceFeatures:
  io.mars.opendata.OpendataFeatures:
  io.mars.job.JobFeatures:
  io.mars.datageneration.DataGenerationFeatures:
    features:
      - datageneration:
          initialEquipmentUnits: 1500
  io.mars.home.HomeFeatures:
  io.mars.command.CommandFeatures:
initializers:
  - io.mars.support.boot.InitialDataInitializer:
  - io.mars.support.boot.I18nResourcesInitializer:
  - io.mars.support.boot.SearchInitializer:
  - io.mars.support.boot.OrchestraInitializer:
