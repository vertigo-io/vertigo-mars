package io.mars.ai.domain;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.data.model.DataObject;
import io.vertigo.datamodel.data.stereotype.Field;
import io.vertigo.datamodel.data.util.DataModelUtil;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class AiDocumentInfo implements DataObject {
	private static final long serialVersionUID = 1L;

	private io.vertigo.datastore.filestore.model.FileInfoURI docUri;
	private String fileName;
	private Long chunkCount;
	private Long scorePercent;
	private java.util.List<String> textFragments = new java.util.ArrayList<>();
	private java.util.List<Long> fragmentsScores = new java.util.ArrayList<>();
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'File'.
	 * @return FileInfoURI docUri <b>Obligatoire</b>
	 */
	@Field(smartType = "STyFileInfoURI", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "File")
	public io.vertigo.datastore.filestore.model.FileInfoURI getDocUri() {
		return docUri;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'File'.
	 * @param docUri FileInfoURI <b>Obligatoire</b>
	 */
	public void setDocUri(final io.vertigo.datastore.filestore.model.FileInfoURI docUri) {
		this.docUri = docUri;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'File name'.
	 * @return String fileName <b>Obligatoire</b>
	 */
	@Field(smartType = "STyText", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "File name")
	public String getFileName() {
		return fileName;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'File name'.
	 * @param fileName String <b>Obligatoire</b>
	 */
	public void setFileName(final String fileName) {
		this.fileName = fileName;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Chunk count'.
	 * @return Long chunkCount <b>Obligatoire</b>
	 */
	@Field(smartType = "STyCount", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Chunk count")
	public Long getChunkCount() {
		return chunkCount;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Chunk count'.
	 * @param chunkCount Long <b>Obligatoire</b>
	 */
	public void setChunkCount(final Long chunkCount) {
		this.chunkCount = chunkCount;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Score'.
	 * @return Long scorePercent <b>Obligatoire</b>
	 */
	@Field(smartType = "STyCount", cardinality = io.vertigo.core.lang.Cardinality.ONE, label = "Score")
	public Long getScorePercent() {
		return scorePercent;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Score'.
	 * @param scorePercent Long <b>Obligatoire</b>
	 */
	public void setScorePercent(final Long scorePercent) {
		this.scorePercent = scorePercent;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Text fragments'.
	 * @return List de String textFragments
	 */
	@Field(smartType = "STyText", cardinality = io.vertigo.core.lang.Cardinality.MANY, label = "Text fragments")
	public java.util.List<String> getTextFragments() {
		return textFragments;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Text fragments'.
	 * @param textFragments List de String
	 */
	public void setTextFragments(final java.util.List<String> textFragments) {
		io.vertigo.core.lang.Assertion.check().isNotNull(textFragments);
		//---
		this.textFragments = textFragments;
	}
	
	/**
	 * Champ : DATA.
	 * Récupère la valeur de la propriété 'Scores'.
	 * @return List de Long fragmentsScores
	 */
	@Field(smartType = "STyCount", cardinality = io.vertigo.core.lang.Cardinality.MANY, label = "Scores")
	public java.util.List<Long> getFragmentsScores() {
		return fragmentsScores;
	}

	/**
	 * Champ : DATA.
	 * Définit la valeur de la propriété 'Scores'.
	 * @param fragmentsScores List de Long
	 */
	public void setFragmentsScores(final java.util.List<Long> fragmentsScores) {
		io.vertigo.core.lang.Assertion.check().isNotNull(fragmentsScores);
		//---
		this.fragmentsScores = fragmentsScores;
	}
	
	/** {@inheritDoc} */
	@Override
	public String toString() {
		return DataModelUtil.toString(this);
	}
}
